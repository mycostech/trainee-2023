// <auto-generated />
using System;
using Candidate.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Candidate.Migrations
{
    [DbContext(typeof(TodoItemsContext))]
    [Migration("20230428072500_UpdateCandidateTable1")]
    partial class UpdateCandidateTable1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Candidate.Data.Appointment", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Meet")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("User_AppointmentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId");

                    b.HasIndex("User_AppointmentId");

                    b.ToTable("Appointments");
                });

            modelBuilder.Entity("Candidate.Data.Notification", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("User_NotificationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Warn")
                        .HasColumnType("datetime2");

                    b.HasKey("UserId");

                    b.HasIndex("User_NotificationId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("Candidate.Data.Picture", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("User_PictureId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId");

                    b.HasIndex("User_PictureId");

                    b.ToTable("Pictures");
                });

            modelBuilder.Entity("Candidate.Data.Score", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Attitude")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Evaluation")
                        .HasColumnType("real");

                    b.Property<int>("Experience")
                        .HasColumnType("int");

                    b.Property<int>("Personality")
                        .HasColumnType("int");

                    b.Property<int>("Skill")
                        .HasColumnType("int");

                    b.Property<int>("TeamPlayer")
                        .HasColumnType("int");

                    b.Property<Guid>("User_ScoreId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId");

                    b.HasIndex("User_ScoreId");

                    b.ToTable("Scores");
                });

            modelBuilder.Entity("Candidate.Data.UrlFile", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("File")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("UrlFiles");
                });

            modelBuilder.Entity("Candidate.Data.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Candidate.Data.Appointment", b =>
                {
                    b.HasOne("Candidate.Data.User", "User_Appointment")
                        .WithMany()
                        .HasForeignKey("User_AppointmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User_Appointment");
                });

            modelBuilder.Entity("Candidate.Data.Notification", b =>
                {
                    b.HasOne("Candidate.Data.User", "User_Notification")
                        .WithMany()
                        .HasForeignKey("User_NotificationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User_Notification");
                });

            modelBuilder.Entity("Candidate.Data.Picture", b =>
                {
                    b.HasOne("Candidate.Data.User", "User_Picture")
                        .WithMany()
                        .HasForeignKey("User_PictureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User_Picture");
                });

            modelBuilder.Entity("Candidate.Data.Score", b =>
                {
                    b.HasOne("Candidate.Data.User", "User_Score")
                        .WithMany()
                        .HasForeignKey("User_ScoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User_Score");
                });

            modelBuilder.Entity("Candidate.Data.UrlFile", b =>
                {
                    b.HasOne("Candidate.Data.User", "User_File")
                        .WithOne("OwnedFile")
                        .HasForeignKey("Candidate.Data.UrlFile", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User_File");
                });

            modelBuilder.Entity("Candidate.Data.User", b =>
                {
                    b.Navigation("OwnedFile");
                });
#pragma warning restore 612, 618
        }
    }
}
